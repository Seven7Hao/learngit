#include "lab51.h" // 请不要删除本行头文件，否则检查不通过
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
int main()
{
	char code;
	struct part inventory[MAX_PARTS];
	int num_parts = 0;

	for (;;) {
		printf("Enter operation code: ");
		scanf(" %c", &code);
		while (getchar() != '\n')
			;
		switch (code) {
		case 'i':
			insert(inventory, &num_parts);
			break;
		case 's':
			search(inventory, num_parts);
			break;
		case 'u':
			update(inventory, num_parts);
			break;
		case 'p':
			print(inventory, num_parts);
			break;
		case 'q':
			return 0;
		default:
			printf("Illegal code\n");
		}
		printf("\n");
	}
}

int read_line(char str[], int n)
{
	int ch, i = 0;
	while (isspace(ch = getchar()));
	while (ch != '\n' && ch != EOF)
	{
		if (i < n) str[i++];
		ch = getchar();
	}
	str[i] = '\0';
	return i;
}

int find_part(int number, const struct part inv[], int np)
{
	int i;
	for (i = 0; i < np; i++)
		if (inv[i].number == number)
			return i;
	return -1;
}

void insert(struct part inv[], int* np)
{
	int part_number;
	if (*np == MAX_PARTS) {
		printf("Database is full; can't add more parts.\n");
		return;
	}
	printf("Enter part number: ");
	scanf("%d", &part_number);
	if (find_part(part_number, inv, *np) >= 0) {
		printf("Part already exists.\n");
		return;
	}
	inv[*np].number = part_number;
	printf("Enter part name: ");
	read_line(inv[*np].name, NAME_LEN);
	printf("Enter quantity on hand: ");
	scanf("%d", &inv[*np].on_hand);
	*np = *np + 1;
}

void search(const struct part inv[], int np)
{
	int i, number;
	printf("Enter part number: ");
	scanf("%d", &number);
	i = find_part(number, inv, np);
	if (i >= 0) {
		printf("Part name: %s\n", inv[i].name);
		printf("Quantity on hand: %d\n", inv[i].on_hand);
	}
	else
		printf("Part not found.\n");
}

void update(struct part inv[], int np)
{
	int i, number, change;
	printf("Enter part number: ");
	scanf("%d", &number);
	i = find_part(number, inv, np);
	if (i >= 0) {
		printf("Enter change in quantity on hand: ");
		scanf("%d", &change);
		inv[i].on_hand += change;
	}
	else
		printf("Part not found.\n");
}

void print(const struct part inv[], int np)
{
	int i;
	printf("Part Number                  "
		"Quantity on Hand\n");
	for (i = 0; i < np; i++)
		printf("%7d       %-25s%11d\n", inv[i].number, inv[i].name, inv[i].on_hand);
}